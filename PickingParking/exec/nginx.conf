events {
    worker_connections 1024;
}
http {
    # MIME 
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # LOG
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
    
    # Gzip
    gzip on;
    gzip_disable "msie6";
    
    # HTTP 블록
    server {
        listen 80;
        server_name k11a102.p.ssafy.io;
        server_tokens off;
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
            allow all;
        }
        
        location / {
            return 301 https://$host$request_uri;
        }
    }
    
    # HTTPS 블록
    server {	    
        listen 443 ssl;
        server_name k11a102.p.ssafy.io;
        server_tokens off;
        
        ssl_certificate /etc/letsencrypt/live/k11a102.p.ssafy.io/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/k11a102.p.ssafy.io/privkey.pem;
        
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384';
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        ssl_session_tickets off;
        
        client_max_body_size 10M;

        # FE
        location / {
            proxy_pass http://frontend:80;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # BE
        location /api {
            proxy_pass http://backend:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}